{"abi":[{"type":"constructor","inputs":[{"name":"_greeting","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"greet","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setGreeting","inputs":[{"name":"_greeting","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2 + r0]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_2[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_2[0], r4, r2\n\tjump.gt\t@.BB0_9\n\tadd\t31, r4, r7\n\tand\t@CPI0_13[0], r7, r7\n\tadd\t63, r7, r7\n\tand\t@CPI0_13[0], r7, r7\n\tsub.s!\t@CPI0_9[0], r7, r8\n\tjump.gt\t@.BB0_9\n\tadd\t128, r7, r7\n\tst.1\t64, r7\n\tst.1\t128, r4\n\tadd\tr5, r4, r5\n\tadd\t36, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_62\n\tadd\t160, r0, r6\n\tshl.s\t5, r5, r7\n\tadd\t160, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_61:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr6, r9, r6\n\tsub!\tr6, r7, r9\n\tjump.ne\t@.BB0_61\n.BB0_62:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_64\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_64:\n\tadd\t160, r4, r1\n\tst.1\tr1, r0\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_2[0], r1, r3\n\tjump.gt\t@.BB0_9\n\tsload\tr0, r4\n\tand!\t1, r4, r3\n\tshr.s\t1, r4, r5\n\tand\t127, r5, r3\n\tadd.ne\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr4, r5, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_31\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_69\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tadd\t@CPI0_4[0], r4, r4\n\tsub.s!\t32, r1, r5\n\tadd.lt\t@CPI0_4[0], r0, r4\n\tst.1\t0, r0\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_4[0], r3, r3\n\tsub!\tr4, r3, r5\n\tjump.ge\t@.BB0_69\n.BB0_70:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_70\n.BB0_69:\n\tsub.s!\t31, r1, r3\n\tjump.le\t@.BB0_80\n\tand!\t@CPI0_13[0], r1, r3\n\tst.1\t0, r0\n\tjump.ne\t@.BB0_74\n\tadd\t160, r0, r4\n\tadd\t@CPI0_4[0], r0, r2\n\tjump\t@.BB0_77\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_6\n\tshl.s\t5, r5, r6\n\tadd\t128, r6, r6\n\tptr.add\tr1, r0, r7\n.BB0_5:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr4, r8, r4\n\tsub!\tr4, r6, r8\n\tjump.ne\t@.BB0_5\n.BB0_6:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_8\n\tshl.s\t5, r5, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_8:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_2[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tadd\t31, r4, r1\n\tsub!\tr1, r3, r2\n\tadd\tr0, r0, r2\n\tadd.ge\t@CPI0_3[0], r0, r2\n\tand\t@CPI0_3[0], r1, r1\n\tsub!\tr1, r0, r5\n\tadd\tr0, r0, r5\n\tadd.lt\t@CPI0_3[0], r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tadd.ne\tr2, r0, r5\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.le\t@.BB0_14\n.BB0_9:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_85\n.BB0_31:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tadd\t31, r2, r1\n\tand\t@CPI0_13[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_13[0], r1, r1\n\tld.1\t64, r10\n\tadd\tr10, r1, r1\n\tsub!\tr1, r10, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_2[0], r1, r6\n\tjump.gt\t@.BB0_9\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_9\n\tadd\t128, r3, r5\n\tst.1\t64, r1\n\tst.1.inc\tr10, r2, r1\n\tadd\t160, r4, r3\n\tadd\tr2, r3, r4\n\tsub!\tr4, r5, r4\n\tjump.le\t@.BB0_17\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_99\n\tst.1\t0, r0\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_102\n\tadd\t128, r0, r2\n\tjump\t@.BB0_86\n.BB0_99:\n\tand\t@CPI0_14[0], r2, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t160, r0, r2\n\tadd.eq\t128, r0, r2\n\tjump\t@.BB0_86\n.BB0_17:\n\tand\t@CPI0_13[0], r2, r5\n\tand\t31, r2, r4\n\tsub!\tr3, r1, r6\n\tjump.ge\t@.BB0_23\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_19\n\tadd\tr3, r4, r7\n\tadd\tr1, r4, r6\n\tsub.s\t32, r6, r6\n\tsub.s\t32, r7, r7\n.BB0_22:\n\tadd\tr6, r5, r8\n\tadd\tr7, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub.s!\t32, r5, r5\n\tjump.ne\t@.BB0_22\n.BB0_19:\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_29\n\tadd\tr1, r0, r6\n\tjump\t@.BB0_28\n.BB0_102:\n\tadd\t@CPI0_4[0], r0, r3\n\tadd\tr0, r0, r4\n.BB0_103:\n\tsload\tr3, r5\n\tadd\t160, r4, r2\n\tst.1\tr2, r5\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_103\n.BB0_86:\n\tsub.s\t96, r2, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tand\t@CPI0_13[0], r2, r6\n\tand\t31, r2, r5\n\tadd\t64, r1, r4\n\tsub.s!\t161, r4, r7\n\tjump.lt\t@.BB0_92\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_88\n\tadd\tr4, r5, r8\n\tor\t128, r5, r7\n\tsub.s\t32, r8, r8\n.BB0_91:\n\tadd\tr8, r6, r9\n\tadd\tr7, r6, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tsub.s!\t32, r6, r6\n\tjump.ne\t@.BB0_91\n.BB0_88:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_98\n\tadd\t160, r0, r6\n\tadd\tr4, r0, r7\n\tjump\t@.BB0_97\n.BB0_92:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_93\n\tsub.s\t32, r6, r7\n\tand\t@CPI0_13[0], r7, r8\n\tadd\t160, r0, r7\n\tadd\tr8, r4, r8\n\tadd\t32, r8, r8\n\tadd\tr4, r0, r9\n.BB0_95:\n\tld.1.inc\tr7, r10, r7\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r8, r10\n\tjump.ne\t@.BB0_95\n.BB0_93:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_98\n\tadd\tr4, r6, r7\n\tadd\t160, r6, r6\n.BB0_97:\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld.1\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n.BB0_98:\n\tadd\t31, r2, r5\n\tand\t@CPI0_13[0], r5, r3\n\tadd\tr2, r4, r2\n\tst.1\tr2, r0\n\tadd\t64, r3, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_23:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_24\n\tsub.s\t32, r5, r6\n\tand\t@CPI0_13[0], r6, r6\n\tadd\tr6, r1, r6\n\tadd\t32, r6, r6\n\tadd\tr3, r0, r7\n\tadd\tr1, r0, r8\n.BB0_26:\n\tld.1.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_26\n.BB0_24:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_29\n\tadd\tr1, r5, r6\n\tadd\tr3, r5, r3\n.BB0_28:\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld.1\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r5, r3\n\tst.1\tr6, r3\n.BB0_29:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tld.1\tr10, r5\n\tsub.s!\t@CPI0_2[0], r5, r2\n\tjump.gt\t@.BB0_9\n\tsload\tr0, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB0_31\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_35\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_4[0], r2, r2\n\tsub.s!\t32, r5, r4\n\tadd.lt\t@CPI0_4[0], r0, r2\n\tst.1\t0, r0\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_4[0], r3, r3\n\tsub!\tr2, r3, r4\n\tjump.ge\t@.BB0_35\n.BB0_36:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_36\n.BB0_35:\n\tsub.s!\t31, r5, r2\n\tjump.le\t@.BB0_46\n\tadd\tr5, r0, stack-[1]\n\tst.1\t0, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr10, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r7\n\tand!\t@CPI0_13[0], r7, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_41\n\tadd\t32, r0, r3\n\tjump\t@.BB0_43\n.BB0_46:\n\tsub!\tr5, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_48\n\tld.1\tr1, r2\n.BB0_48:\n\tshl.s\t3, r5, r1\n\tshr\t@CPI0_15[0], r1, r1\n\txor\t@CPI0_15[0], r1, r1\n\tand\tr2, r1, r2\n\tshl.s\t1, r5, r1\n\tjump\t@.BB0_37\n.BB0_80:\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_82\n\tld.1\t160, r2\n.BB0_82:\n\tshl.s\t3, r1, r3\n\tshr\t@CPI0_15[0], r3, r3\n\txor\t@CPI0_15[0], r3, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r1, r2\n\tjump\t@.BB0_71\n.BB0_41:\n\tsub.s\t1, r2, r3\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r4\n\tadd\t32, r0, r3\n\tadd\t1, r4, r4\n.BB0_42:\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r3, r3\n\tadd\t1, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.ne\t@.BB0_42\n.BB0_43:\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB0_45\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tshr\t@CPI0_15[0], r2, r2\n\txor\t@CPI0_15[0], r2, r2\n\tadd\tr3, r6, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n.BB0_37:\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_74:\n\tadd\t@CPI0_4[0], r0, r2\n\tadd\t32, r0, r5\n\tsub.s\t1, r3, r4\n\tshr.s\t5, r4, r4\n\tadd\t@CPI0_10[0], r4, r4\n.BB0_75:\n\tadd\tr5, r0, r6\n\tadd\t128, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr2, r5\n\tadd\t32, r6, r5\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r7\n\tjump.ne\t@.BB0_75\n\tadd\t160, r6, r4\n.BB0_77:\n\tsub!\tr3, r1, r3\n\tjump.ge\t@.BB0_79\n\tshl.s\t3, r1, r3\n\tand\t248, r3, r3\n\tshr\t@CPI0_15[0], r3, r3\n\txor\t@CPI0_15[0], r3, r3\n\tld.1\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_79:\n\tadd\t1, r0, r2\n\tshl.s\t1, r1, r3\n.BB0_71:\n\tor\tr3, r2, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfinalize_allocation:\n.func_begin1:\n\tadd\t31, r2, r2\n\tand\t@CPI1_3[0], r2, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tjump.gt\t@.BB1_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_2\n\tst.1\t64, r1\n\tret\n.BB1_2:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t8589934560\nCPI0_2:\nCPI1_0:\n\t.cell\t18446744073709551615\nCPI0_3:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_4:\n\t.cell\t18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_5:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_6:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_7:\n\t.cell\t3484299799\nCPI0_8:\n\t.cell\t2752735330\nCPI0_9:\n\t.cell\t18446744073709551487\nCPI0_10:\n\t.cell\t18569430475105882587588266137607568536673111973893317399460219858819262702948\nCPI0_11:\nCPI1_1:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_12:\nCPI1_2:\n\t.cell\t2852213850513516153367582212096\nCPI0_13:\nCPI1_3:\n\t.cell\t-32\nCPI0_14:\n\t.cell\t-256\nCPI0_15:\n\t.cell\t-1\n","methodIdentifiers":{"greet()":"cfae3217","setGreeting(string)":"a4136862"},"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.905b735b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"cancun\",\"libraries\":{\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol:DecimalUtils\":\"0x91cc0f0a227b8dd56794f9391e8af48b40420a0b\",\"node_modules/ether-email-auth/packages/contracts/src/libraries/SubjectUtils.sol:SubjectUtils\":\"0x981e3df952358a57753c7b85de7949da4abcf54a\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@matterlabs/=node_modules/@matterlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@uniswap/=node_modules/@uniswap/\",\":@zk-email/=node_modules/@zk-email/\",\":accountabstraction/=node_modules/accountabstraction/\",\":ds-test/=node_modules/ds-test/src/\",\":email-recovery/=node_modules/email-recovery/\",\":ether-email-auth/=node_modules/ether-email-auth/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0xc60baa9a1e990a523e3dc7801c2ad14d6ebb76889906b3f5f782801dd0b47463\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://08addef89ca412d681c74015fe812f6dd85c58d386ac5cbc00a7fab938d2b4d6\",\"dweb:/ipfs/QmVPjd7shH5ryKijzgRZ34zUoMzbAzXQqAuM18GiWQAS2d\"]}},\"version\":1}","solc_version":"0.8.26","solc_zkvm_edition":"1.0.1","zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 1:\"contracts/Greeter.sol\"\nobject \"Greeter_315\" {\n    code {\n        {\n            /// @src 1:62:378  \"contract Greeter {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Greeter_315\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let _2 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_2, 0x1f), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let length := mload(_2)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 0x24)\n            }\n            let array := allocate_memory(add(and(add(length, 0x1f), not(31)), 32))\n            mstore(array, length)\n            if gt(add(add(_2, length), 32), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:62:378  \"contract Greeter {...\"\n            mcopy(add(array, 32), add(_2, 32), length)\n            mstore(add(add(array, length), 32), /** @src -1:-1:-1 */ 0)\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let newLen := mload(array)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 0x24)\n            }\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 1:62:378  \"contract Greeter {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding := and(_3, 1)\n            if iszero(outOfPlaceEncoding)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 0x24)\n            }\n            if gt(length_1, 0x1f)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 1:62:378  \"contract Greeter {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 0x1f)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _4 := add(data, shr(5, add(length_1, 0x1f)))\n                let start := deleteStart\n                for { } lt(start, _4) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 1:62:378  \"contract Greeter {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 1:62:378  \"contract Greeter {...\"\n            srcOffset := 32\n            switch gt(newLen, 0x1f)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 1:62:378  \"contract Greeter {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:62:378  \"contract Greeter {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(array, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(array, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 1:62:378  \"contract Greeter {...\"\n                if newLen\n                {\n                    value := mload(add(array, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let _5 := mload(64)\n            let _6 := datasize(\"Greeter_315_deployed\")\n            codecopy(_5, dataoffset(\"Greeter_315_deployed\"), _6)\n            return(_5, _6)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 1:\"contracts/Greeter.sol\"\n    object \"Greeter_315_deployed\" {\n        code {\n            {\n                /// @src 1:62:378  \"contract Greeter {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0xa4136862 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        finalize_allocation(_1, add(and(add(length, 0x1f), not(31)), 32))\n                        mstore(_1, length)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(add(_1, 32), add(offset, 36), length)\n                        mstore(add(add(_1, length), 32), 0)\n                        let newLen := mload(_1)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _2 := extract_byte_array_length(sload(0))\n                        if gt(_2, 0x1f)\n                        {\n                            mstore(0, 0)\n                            let deleteStart := add(18569430475105882587588266137607568536673111973893317399460219858819262702947, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 32)\n                            {\n                                deleteStart := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            }\n                            let _3 := add(18569430475105882587588266137607568536673111973893317399460219858819262702947, shr(5, add(_2, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _3) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, 0)\n                            let dstPtr := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(0, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value := 0\n                            if newLen\n                            {\n                                value := mload(add(_1, srcOffset))\n                            }\n                            sstore(0, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        return(0, 0)\n                    }\n                    case 0xcfae3217 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(0)\n                        let length_1 := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length_1)\n                        let updated_pos := add(memPtr, 0x20)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(updated_pos, and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length_1)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 0x20) }\n                            {\n                                mstore(add(add(memPtr, i_1), 0x20), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i_1), 0x20)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(64)\n                        mstore(memPos, 0x20)\n                        let length_2 := mload(memPtr)\n                        mstore(add(memPos, 0x20), length_2)\n                        mcopy(add(memPos, 64), updated_pos, length_2)\n                        mstore(add(add(memPos, length_2), 64), 0)\n                        return(memPos, add(sub(add(memPos, and(add(length_2, 31), not(31))), memPos), 64))\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:62:378  \"contract Greeter {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cc7dd1fcbedf65e9c81d68e370a1ea16d5bb79e05cb4e6ab4b4a78687688f4cc64736f6c634300081a0033\"\n    }\n}\n","hash":"0100009374005fae7772572e7ac3afbbc69b011e3962b9c3d8f14bca80fe2f14","factoryDependencies":{},"id":1}