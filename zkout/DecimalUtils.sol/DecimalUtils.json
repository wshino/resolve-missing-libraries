{"abi":[{"type":"function","name":"uintToDecimalString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"uintToDecimalString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"decimal","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"}],"bytecode":{"object":"00030000000000020000008003000039000000400030043f00000000030100190000006003300270000000a7033001970000000102200190000000190000c13d000000040230008c000000230000413d000000000201043b000000e002200270000000a90420009c000000210000613d000000aa0220009c000000230000c13d000000240230008c000000230000413d0000000402100370000000000402043b000000ab0240009c0000002e0000413d0000004005000039000000ab6240012a000000380000013d0000000001000416000000000101004b000000230000c13d000000200100003900000100001004430000012000000443000000a801000041000002960001042e000000440230008c000000250000813d000000000100001900000297000104300000002402100370000000000202043b0000000404100370000000000404043b000000ab0540009c0000006e0000413d0000004006000039000000ab7540012a000000780000013d000000ac5240012a000000ad0540009c000000000204a019000000ad0540009c00000000050000190000002005002039000000ae0620009c00000010055081bf000000af02208197000000ae6220812a000000b00620009c0000000805508039000000b102208197000000b06220812a000027100620008c0000000405508039000000a702208197000027106220811a000000640620008c00000002055080390000ffff0220818f000000646220811a000000090220008c0000000105502039000000bb065001970000005f07600039000000bb027001970000008002200039000000400020043f000000000131034f0000000102500039000000800020043f00000020026000390000000503200272000000590000613d000000a0020000390000000503300210000000a003300039000000000601034f000000006706043c0000000002720436000000000732004b000000550000c13d0000000102000039000000000302004b0000005c0000c13d000000a103500039000000090640008c0000000a6440011a0000000306600210000000b20660021f000000b306600197000000010330008a0000000007030433000000b407700197000000000676019f00000000006304350000005d0000213d000000800300043d000000ff0530018f000000120350008c000000b30000213d0000001404000039000000b60000013d000000ac6540012a000000ad0640009c000000000504a019000000ad0640009c00000000060000190000002006002039000000ae0750009c00000010066081bf000000af05508197000000ae7550812a000000b00750009c0000000806608039000000b105508197000000b07550812a000027100750008c0000000406608039000000a705508197000027107550811a000000640750008c00000002066080390000ffff0550818f000000647550811a000000090550008c0000000106602039000000bb056001970000005f08500039000000bb088001970000008008800039000000400080043f000000000131034f0000000103600039000000800030043f00000020035000390000000505300272000000990000613d000000a0030000390000000505500210000000a005500039000000000801034f000000008908043c0000000003930436000000000953004b000000950000c13d0000000105000039000000000305004b0000009c0000c13d000000a103600039000000090840008c0000000a8440011a0000000308800210000000b20880021f000000b308800197000000010330008a0000000009030433000000b409900197000000000898019f00000000008304350000009d0000213d000000800300043d000000ff0630018f000000000326004b000001440000a13d000000ff0360008c000001460000613d0000000008000415000000020880008a00000005088002100000000104600039000001520000013d000000ff0350008c000001460000613d00000001045000390000001f03400039000001e00630018f0000003f03600039000003e00830018f000000400300043d0000000007380019000000000887004b00000000080000190000000108004039000000b10970009c000002500000213d0000000108800190000002500000c13d000000400070043f00000000044304360000001f0760018f0000000508600272000000cf0000613d0000000006640019000000000801034f0000000009040019000000008a08043c0000000009a90436000000000a69004b000000cb0000c13d000000000607004b000000d10000613d0000000006030433000000ff0760018f000000130650008c000000d80000813d0000000002570049000000ff0620008c000001460000213d000000010d70008a000000ff06d0008c000001460000213d000000120670008c000001460000413d000000130670008a000000120870008a000000000886004b000001460000213d00000000075700490000000008460019000000000c000019000000000b000019000000ea0000013d000000010bb00039000000010da0008a000000000a0a004b000001e20000613d000000ff0ad0018f000000000d6a004b000000fc0000c13d00000000020c004b0000011e0000613d0000000002030433000000000262004b000002560000a13d0000000002080433000000b402200197000000b8022001c70000000000280435000000ff02b0018f000000ff0b20008c000001460000613d000000010b2000390000000002000019000000e70000013d000000120d50008c0000010e0000213d000000ff0d70008c000001460000213d000000000d7a004b0000010e0000813d000000000d030433000000000dad004b000002560000a13d000000000d4a0019000000000e0d0433000000b40ee00197000000b60ee001c70000000000ed0435000000ff0bb0018f000000ff0db0008c000000e60000c13d000001460000013d000000000d0c004b000001210000c13d000000000d02004b000001210000613d000000000c2a004b000001460000413d000000000c2a0049000000800d00043d000000000dcd004b000002560000a13d000000a00cc00039000000000c0c0433000000b70cc00197000000b60dc0009c000001360000c13d0000011f0000013d0000000002000019000000000c000019000000e70000013d000000000d2a004b000001460000413d000000000d2a0049000000800e00043d000000000ede004b000002560000a13d000000000e030433000000000eae004b000002560000a13d000000000e4a0019000000000f0e0433000000b40ff00197000000a00dd00039000000000d0d0433000000b70dd00197000000000ddf019f0000000000de0435000000ff0bb0018f000000ff0db0008c000000e60000c13d000001460000013d000000000d030433000000000dad004b000002560000a13d000000000d4a0019000000000e0d0433000000b40ee00197000000000cce019f0000000000cd0435000000ff0bb0018f000000ff0cb0008c000001460000613d000000010bb00039000000010c000039000000e70000013d000000bc0320009c0000014c0000a13d000000b90100004100000000001004350000001101000039000000040010043f000000ba0100004100000297000104300000000008000415000000030880008a0000000508800210000000b50320009c000002500000213d00000002042000390000001f03400039000000bb093001970000003f03900039000000bb0a300197000000400300043d00000000073a0019000000000aa7004b000000000a000019000000010a004039000000b10b70009c000002500000213d000000010aa00190000002500000c13d000000400070043f00000000044304360000001f0790018f000000050a9002720000016b0000613d0000000009940019000000000a01034f000000000b04001900000000ac0a043c000000000bcb0436000000000c9b004b000001670000c13d000000000707004b0000016d0000613d0000000507800270000000000703001f0000000007030433000000ff0870018f000000000726004b000001760000213d0000000005680049000000ff0750008c000001460000213d000000010e80008a000000ff07e0008c000001460000213d000000000782004b000001460000213d000000000728004b000001460000613d0000000007680049000000bd0920016700000000089800190000000009480019000000000c000019000000000d000019000001880000013d000000010cc00039000000010eb0008a000000000b0b004b000002130000613d000000ff0be0018f000000000e8b004b0000019a0000c13d00000000050d004b000001bc0000613d0000000005030433000000000585004b000002560000a13d0000000005090433000000b405500197000000b8055001c70000000000590435000000ff05c0018f000000ff0a50008c000001460000613d000000010c5000390000000005000019000001850000013d000000000e26004b000001ac0000213d000000ff0e70008c000001460000213d000000000e7b004b000001ac0000813d000000000a030433000000000aba004b000002560000a13d000000000a4b0019000000000e0a0433000000b40ee00197000000b60ee001c70000000000ea0435000000ff0cc0018f000000ff0ac0008c000001840000c13d000001460000013d000000000e0d004b000001bf0000c13d000000000e05004b000001bf0000613d000000000d5b004b000001460000413d000000000d5b0049000000800e00043d000000000ede004b000002560000a13d000000a00dd00039000000000d0d0433000000b70dd00197000000b60ed0009c000001d40000c13d000001bd0000013d0000000005000019000000000d000019000001850000013d000000000e5b004b000001460000413d000000000e5b0049000000800f00043d000000000fef004b000002560000a13d000000000f030433000000000fbf004b000002560000a13d000000000f4b0019000000000a0f0433000000b40aa00197000000a00ee00039000000000e0e0433000000b70ee00197000000000aea019f0000000000af0435000000ff0cc0018f000000ff0ac0008c000001840000c13d000001460000013d000000000e030433000000000ebe004b000002560000a13d000000000e4b0019000000000f0e0433000000b40ff00197000000000ddf019f0000000000de0435000000ff0cc0018f000000ff0dc0008c000001460000613d000000010cc00039000000010d000039000001850000013d000000ff05b0018f0000001f02500039000001e00720018f0000003f02700039000003e00620018f000000400200043d0000000006620019000000000826004b00000000080000190000000108004039000000b10960009c000002500000213d0000000108800190000002500000c13d000000400060043f00000000065204360000001f0870018f0000000509700272000001fb0000613d00000000077600190000000009060019000000001a01043c0000000009a90436000000000a79004b000001f70000c13d000000000108004b000001fd0000613d000000000105004b000002430000613d00000000010000190000000007030433000000000717004b000002560000a13d0000000007020433000000000717004b000002560000a13d00000000074100190000000007070433000000b70770019700000000086100190000000009080433000000b409900197000000000779019f00000000007804350000000101100039000000ff0110018f000000000751004b000002000000413d000002430000013d000000ff05c0018f0000001f02500039000001e00720018f0000003f02700039000003e00620018f000000400200043d0000000006620019000000000826004b00000000080000190000000108004039000000b10960009c000002500000213d0000000108800190000002500000c13d000000400060043f00000000065204360000001f0870018f00000005097002720000022c0000613d00000000077600190000000009060019000000001a01043c0000000009a90436000000000a79004b000002280000c13d000000000108004b0000022e0000613d000000000105004b000002430000613d00000000010000190000000007030433000000000717004b000002560000a13d0000000007020433000000000717004b000002560000a13d00000000074100190000000007070433000000b70770019700000000086100190000000009080433000000b409900197000000000779019f00000000007804350000000101100039000000ff0110018f000000000751004b000002310000413d000000400100043d000100000001001d0295025c0000040f00000001030000290000000001310049000000a70210009c000000a7010080410000006001100210000000a70230009c000000a7030080410000004002300210000000000121019f000002960001042e000000b90100004100000000001004350000004101000039000000040010043f000000ba010000410000029700010430000000b90100004100000000001004350000003201000039000000040010043f000000ba0100004100000297000104300000002003000039000000000331043600000000420204340000000000230435000000bb062001970000001f0520018f0000004001100039000000000714004b000002750000813d000000000706004b000002710000613d00000000085400190000000007510019000000200770008a000000200880008a0000000009670019000000000a680019000000000a0a04330000000000a90435000000200660008c0000026b0000c13d000000000605004b0000028f0000613d0000000007010019000002850000013d000000000706004b000002810000613d000000200760008a000000bb077001970000000007170019000000200770003900000000080400190000000009010019000000008a0804340000000009a90436000000000a79004b0000027d0000c13d000000000705004b0000028f0000613d000000000761001900000000046400190000000305500210000000000607043300000000065601cf000000000656022f00000000040404330000010005500089000000000454022f00000000045401cf000000000464019f0000000000470435000000000421001900000000000404350000001f02200039000000bb022001970000000001210019000000000001042d0000029500000432000002960001042e0000029700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000f41ce7db000000000000000000000000000000000000000000000000000000006f186a790000000000184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000000000000000000000000000000000000000004ee2d6d415b85acef810000000000000000000000000000000000000000000004ee2d6d415b85acef80ffffffff000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000ffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000ffffffffffffffff30313233343536373839616263646566000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000fffffffffffffffd3000000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff88ebbe0587e4e7c55c78b594aefcf11fc02d6c88a6c55aec90a512cd10c5966e"},"assembly":"\t.text\n\t.file\t\"DecimalUtils.sol:DecimalUtils\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3 + r0]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_7\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_10\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.eq\t@.BB0_9\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_10\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_10\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_4[0], r4, r2\n\tjump.lt\t@.BB0_13\n\tadd\t64, r0, r5\n\tdiv.s\t@CPI0_4[0], r4, r2, r6\n\tjump\t@.BB0_14\n.BB0_7:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_10\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t68, r3, r2\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_11:\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tptr.add.s\t4, r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_4[0], r4, r5\n\tjump.lt\t@.BB0_26\n\tadd\t64, r0, r6\n\tdiv.s\t@CPI0_4[0], r4, r5, r7\n\tjump\t@.BB0_27\n.BB0_13:\n\tdiv.s\t@CPI0_5[0], r4, r2, r5\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tadd.le\tr4, r0, r2\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.gt\t32, r0, r5\n\tsub.s!\t@CPI0_7[0], r2, r6\n\tor.ge\t16, r5, r5\n\tand.ge\t@CPI0_8[0], r2, r2\n\tdiv.s.ge\t@CPI0_7[0], r2, r2, r6\n.BB0_14:\n\tsub.s!\t@CPI0_9[0], r2, r6\n\tadd.ge\t8, r5, r5\n\tand.ge\t@CPI0_10[0], r2, r2\n\tdiv.s.ge\t@CPI0_9[0], r2, r2, r6\n\tsub.s!\t10000, r2, r6\n\tadd.ge\t4, r5, r5\n\tand.ge\t@CPI0_0[0], r2, r2\n\tdiv.s.ge\t10000, r2, r2, r6\n\tsub.s!\t100, r2, r6\n\tadd.ge\t2, r5, r5\n\tand.ge\t65535, r2, r2\n\tdiv.s.ge\t100, r2, r2, r6\n\tsub.s!\t9, r2, r2\n\tadd.gt\t1, r5, r5\n\tand\t@CPI0_20[0], r5, r6\n\tadd\t95, r6, r7\n\tand\t@CPI0_20[0], r7, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tptr.add\tr1, r3, r1\n\tadd\t1, r5, r2\n\tst.1\t128, r2\n\tadd\t32, r6, r2\n\tshr.s!\t5, r2, r3\n\tjump.eq\t@.BB0_20\n\tadd\t160, r0, r2\n\tshl.s\t5, r3, r3\n\tadd\t160, r3, r3\n\tptr.add\tr1, r0, r6\n.BB0_19:\n\tld.inc\tr6, r7, r6\n\tst.1.inc\tr2, r7, r2\n\tsub!\tr2, r3, r7\n\tjump.ne\t@.BB0_19\n.BB0_20:\n\tadd\t1, r0, r2\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_22\n.BB0_22:\n\tadd\t161, r5, r3\n.BB0_23:\n\tsub.s!\t9, r4, r6\n\tdiv.s\t10, r4, r4, r6\n\tshl.s\t3, r6, r6\n\tshl\t@CPI0_11[0], r6, r6\n\tand\t@CPI0_12[0], r6, r6\n\tsub.s\t1, r3, r3\n\tld.1\tr3, r7\n\tand\t@CPI0_13[0], r7, r7\n\tor\tr6, r7, r6\n\tst.1\tr3, r6\n\tjump.gt\t@.BB0_23\n\tld.1\t128, r3\n\tand\t255, r3, r5\n\tsub.s!\t18, r5, r3\n\tjump.gt\t@.BB0_40\n\tadd\t20, r0, r4\n\tjump\t@.BB0_42\n.BB0_26:\n\tdiv.s\t@CPI0_5[0], r4, r5, r6\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tadd.le\tr4, r0, r5\n\tsub.s!\t@CPI0_6[0], r4, r6\n\tadd\t0, r0, r6\n\tadd.gt\t32, r0, r6\n\tsub.s!\t@CPI0_7[0], r5, r7\n\tor.ge\t16, r6, r6\n\tand.ge\t@CPI0_8[0], r5, r5\n\tdiv.s.ge\t@CPI0_7[0], r5, r5, r7\n.BB0_27:\n\tsub.s!\t@CPI0_9[0], r5, r7\n\tadd.ge\t8, r6, r6\n\tand.ge\t@CPI0_10[0], r5, r5\n\tdiv.s.ge\t@CPI0_9[0], r5, r5, r7\n\tsub.s!\t10000, r5, r7\n\tadd.ge\t4, r6, r6\n\tand.ge\t@CPI0_0[0], r5, r5\n\tdiv.s.ge\t10000, r5, r5, r7\n\tsub.s!\t100, r5, r7\n\tadd.ge\t2, r6, r6\n\tand.ge\t65535, r5, r5\n\tdiv.s.ge\t100, r5, r5, r7\n\tsub.s!\t9, r5, r5\n\tadd.gt\t1, r6, r6\n\tand\t@CPI0_20[0], r6, r5\n\tadd\t95, r5, r8\n\tand\t@CPI0_20[0], r8, r8\n\tadd\t128, r8, r8\n\tst.1\t64, r8\n\tptr.add\tr1, r3, r1\n\tadd\t1, r6, r3\n\tst.1\t128, r3\n\tadd\t32, r5, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_33\n\tadd\t160, r0, r3\n\tshl.s\t5, r5, r5\n\tadd\t160, r5, r5\n\tptr.add\tr1, r0, r8\n.BB0_32:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr3, r9, r3\n\tsub!\tr3, r5, r9\n\tjump.ne\t@.BB0_32\n.BB0_33:\n\tadd\t1, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_35\n.BB0_35:\n\tadd\t161, r6, r3\n.BB0_36:\n\tsub.s!\t9, r4, r8\n\tdiv.s\t10, r4, r4, r8\n\tshl.s\t3, r8, r8\n\tshl\t@CPI0_11[0], r8, r8\n\tand\t@CPI0_12[0], r8, r8\n\tsub.s\t1, r3, r3\n\tld.1\tr3, r9\n\tand\t@CPI0_13[0], r9, r9\n\tor\tr8, r9, r8\n\tst.1\tr3, r8\n\tjump.gt\t@.BB0_36\n\tld.1\t128, r3\n\tand\t255, r3, r6\n\tsub!\tr6, r2, r3\n\tjump.le\t@.BB0_83\n\tsub.s!\t255, r6, r3\n\tjump.eq\t@.BB0_84\n\tcontext.sp\tr8\n\tsub.s\t2, r8, r8\n\tshl.s\t5, r8, r8\n\tadd\t1, r6, r4\n\tjump\t@.BB0_87\n.BB0_40:\n\tsub.s!\t255, r5, r3\n\tjump.eq\t@.BB0_84\n\tadd\t1, r5, r4\n.BB0_42:\n\tadd\t31, r4, r3\n\tand\t480, r3, r6\n\tadd\t63, r6, r3\n\tand\t992, r3, r8\n\tld.1\t64, r3\n\tadd\tr8, r3, r7\n\tsub!\tr7, r8, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_10[0], r7, r9\n\tjump.gt\t@.BB0_153\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_153\n\tst.1\t64, r7\n\tst.1.inc\tr3, r4, r4\n\tand\t31, r6, r7\n\tshr.s!\t5, r6, r8\n\tjump.eq\t@.BB0_47\n\tadd\tr4, r6, r6\n\tptr.add\tr1, r0, r8\n\tadd\tr4, r0, r9\n.BB0_46:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r6, r10\n\tjump.ne\t@.BB0_46\n.BB0_47:\n\tsub!\tr7, r0, r6\n\tjump.eq\t@.BB0_49\n.BB0_49:\n\tld.1\tr3, r6\n\tand\t255, r6, r7\n\tsub.s!\t19, r5, r6\n\tjump.ge\t@.BB0_51\n\tsub\tr7, r5, r2\n\tsub.s!\t255, r2, r6\n\tjump.gt\t@.BB0_84\n.BB0_51:\n\tsub.s\t1, r7, r13\n\tsub.s!\t255, r13, r6\n\tjump.gt\t@.BB0_84\n\tsub.s!\t18, r7, r6\n\tjump.lt\t@.BB0_84\n\tsub.s\t19, r7, r6\n\tsub.s\t18, r7, r8\n\tsub!\tr6, r8, r8\n\tjump.gt\t@.BB0_84\n\tsub\tr7, r5, r7\n\tadd\tr6, r4, r8\n\tadd\tr0, r0, r12\n\tadd\tr0, r0, r11\n\tjump\t@.BB0_58\n.BB0_68:\n.BB0_79:\n\tadd\t1, r11, r11\n.BB0_57:\n\tsub.s\t1, r10, r13\n\tsub!\tr10, r0, r10\n\tjump.eq\t@.BB0_128\n.BB0_58:\n\tand\t255, r13, r10\n\tsub!\tr10, r6, r13\n\tjump.ne\t@.BB0_63\n\tsub!\tr12, r0, r2\n\tjump.eq\t@.BB0_55\n\tld.1\tr3, r2\n\tsub!\tr2, r6, r2\n\tjump.le\t@.BB0_154\n\tld.1\tr8, r2\n\tand\t@CPI0_13[0], r2, r2\n\tor\t@CPI0_17[0], r2, r2\n\tst.1\tr8, r2\n\tand\t255, r11, r2\n\tsub.s!\t255, r2, r11\n\tjump.eq\t@.BB0_84\n\tadd\t1, r2, r11\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_57\n.BB0_63:\n\tsub.s!\t18, r5, r13\n\tjump.gt\t@.BB0_69\n\tsub.s!\t255, r7, r13\n\tjump.gt\t@.BB0_84\n\tsub!\tr10, r7, r13\n\tjump.ge\t@.BB0_69\n\tld.1\tr3, r13\n\tsub!\tr13, r10, r13\n\tjump.le\t@.BB0_154\n\tadd\tr10, r4, r13\n\tld.1\tr13, r14\n\tand\t@CPI0_13[0], r14, r14\n\tor\t@CPI0_15[0], r14, r14\n\tst.1\tr13, r14\n\tand\t255, r11, r11\n\tsub.s!\t255, r11, r13\n\tjump.ne\t@.BB0_68\n\tjump\t@.BB0_84\n.BB0_69:\n\tsub!\tr12, r0, r13\n\tjump.ne\t@.BB0_75\n\tsub!\tr2, r0, r13\n\tjump.eq\t@.BB0_75\n\tsub!\tr10, r2, r12\n\tjump.lt\t@.BB0_84\n\tsub\tr10, r2, r12\n\tld.1\t128, r13\n\tsub!\tr13, r12, r13\n\tjump.le\t@.BB0_154\n\tadd\t160, r12, r12\n\tld.1\tr12, r12\n\tand\t@CPI0_16[0], r12, r12\n\tsub.s!\t@CPI0_15[0], r12, r13\n\tjump.ne\t@.BB0_80\n\tjump\t@.BB0_56\n.BB0_55:\n\tadd\tr0, r0, r2\n.BB0_56:\n\tadd\tr0, r0, r12\n\tjump\t@.BB0_57\n.BB0_75:\n\tsub!\tr10, r2, r13\n\tjump.lt\t@.BB0_84\n\tsub\tr10, r2, r13\n\tld.1\t128, r14\n\tsub!\tr14, r13, r14\n\tjump.le\t@.BB0_154\n\tld.1\tr3, r14\n\tsub!\tr14, r10, r14\n\tjump.le\t@.BB0_154\n\tadd\tr10, r4, r14\n\tld.1\tr14, r15\n\tand\t@CPI0_13[0], r15, r15\n\tadd\t160, r13, r13\n\tld.1\tr13, r13\n\tand\t@CPI0_16[0], r13, r13\n\tor\tr15, r13, r13\n\tst.1\tr14, r13\n\tand\t255, r11, r11\n\tsub.s!\t255, r11, r13\n\tjump.ne\t@.BB0_79\n\tjump\t@.BB0_84\n.BB0_80:\n\tld.1\tr3, r13\n\tsub!\tr13, r10, r13\n\tjump.le\t@.BB0_154\n\tadd\tr10, r4, r13\n\tld.1\tr13, r14\n\tand\t@CPI0_13[0], r14, r14\n\tor\tr14, r12, r12\n\tst.1\tr13, r12\n\tand\t255, r11, r11\n\tsub.s!\t255, r11, r12\n\tjump.eq\t@.BB0_84\n\tadd\t1, r11, r11\n\tadd\t1, r0, r12\n\tjump\t@.BB0_57\n.BB0_83:\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.le\t@.BB0_85\n.BB0_84:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tcontext.sp\tr8\n\tsub.s\t3, r8, r8\n\tshl.s\t5, r8, r8\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.gt\t@.BB0_153\n\tadd\t2, r2, r4\n.BB0_87:\n\tadd\t31, r4, r3\n\tand\t@CPI0_20[0], r3, r9\n\tadd\t63, r9, r3\n\tand\t@CPI0_20[0], r3, r10\n\tld.1\t64, r3\n\tadd\tr10, r3, r7\n\tsub!\tr7, r10, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI0_10[0], r7, r11\n\tjump.gt\t@.BB0_153\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB0_153\n\tst.1\t64, r7\n\tst.1.inc\tr3, r4, r4\n\tand\t31, r9, r7\n\tshr.s!\t5, r9, r10\n\tjump.eq\t@.BB0_92\n\tadd\tr4, r9, r9\n\tptr.add\tr1, r0, r10\n\tadd\tr4, r0, r11\n.BB0_91:\n\tld.inc\tr10, r12, r10\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr11, r9, r12\n\tjump.ne\t@.BB0_91\n.BB0_92:\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB0_94\n.BB0_94:\n\tshr.s\t5, r8, r7\n\tadd\tr3, r0, stack[r7]\n\tld.1\tr3, r7\n\tand\t255, r7, r8\n\tsub!\tr6, r2, r7\n\tjump.gt\t@.BB0_96\n\tsub\tr8, r6, r5\n\tsub.s!\t255, r5, r7\n\tjump.gt\t@.BB0_84\n.BB0_96:\n\tsub.s\t1, r8, r14\n\tsub.s!\t255, r14, r7\n\tjump.gt\t@.BB0_84\n\tsub!\tr2, r8, r7\n\tjump.gt\t@.BB0_84\n\tsub!\tr8, r2, r7\n\tjump.eq\t@.BB0_84\n\tsub\tr8, r6, r7\n\txor\t@CPI0_22[0], r2, r9\n\tadd\tr8, r9, r8\n\tadd\tr8, r4, r9\n\tadd\tr0, r0, r12\n\tadd\tr0, r0, r13\n\tjump\t@.BB0_103\n.BB0_113:\n.BB0_124:\n\tadd\t1, r12, r12\n.BB0_102:\n\tsub.s\t1, r11, r14\n\tsub!\tr11, r0, r11\n\tjump.eq\t@.BB0_140\n.BB0_103:\n\tand\t255, r14, r11\n\tsub!\tr11, r8, r14\n\tjump.ne\t@.BB0_108\n\tsub!\tr13, r0, r5\n\tjump.eq\t@.BB0_100\n\tld.1\tr3, r5\n\tsub!\tr5, r8, r5\n\tjump.le\t@.BB0_154\n\tld.1\tr9, r5\n\tand\t@CPI0_13[0], r5, r5\n\tor\t@CPI0_17[0], r5, r5\n\tst.1\tr9, r5\n\tand\t255, r12, r5\n\tsub.s!\t255, r5, r10\n\tjump.eq\t@.BB0_84\n\tadd\t1, r5, r12\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_102\n.BB0_108:\n\tsub!\tr6, r2, r14\n\tjump.gt\t@.BB0_114\n\tsub.s!\t255, r7, r14\n\tjump.gt\t@.BB0_84\n\tsub!\tr11, r7, r14\n\tjump.ge\t@.BB0_114\n\tld.1\tr3, r10\n\tsub!\tr10, r11, r10\n\tjump.le\t@.BB0_154\n\tadd\tr11, r4, r10\n\tld.1\tr10, r14\n\tand\t@CPI0_13[0], r14, r14\n\tor\t@CPI0_15[0], r14, r14\n\tst.1\tr10, r14\n\tand\t255, r12, r12\n\tsub.s!\t255, r12, r10\n\tjump.ne\t@.BB0_113\n\tjump\t@.BB0_84\n.BB0_114:\n\tsub!\tr13, r0, r14\n\tjump.ne\t@.BB0_120\n\tsub!\tr5, r0, r14\n\tjump.eq\t@.BB0_120\n\tsub!\tr11, r5, r13\n\tjump.lt\t@.BB0_84\n\tsub\tr11, r5, r13\n\tld.1\t128, r14\n\tsub!\tr14, r13, r14\n\tjump.le\t@.BB0_154\n\tadd\t160, r13, r13\n\tld.1\tr13, r13\n\tand\t@CPI0_16[0], r13, r13\n\tsub.s!\t@CPI0_15[0], r13, r14\n\tjump.ne\t@.BB0_125\n\tjump\t@.BB0_101\n.BB0_100:\n\tadd\tr0, r0, r5\n.BB0_101:\n\tadd\tr0, r0, r13\n\tjump\t@.BB0_102\n.BB0_120:\n\tsub!\tr11, r5, r14\n\tjump.lt\t@.BB0_84\n\tsub\tr11, r5, r14\n\tld.1\t128, r15\n\tsub!\tr15, r14, r15\n\tjump.le\t@.BB0_154\n\tld.1\tr3, r15\n\tsub!\tr15, r11, r15\n\tjump.le\t@.BB0_154\n\tadd\tr11, r4, r15\n\tld.1\tr15, r10\n\tand\t@CPI0_13[0], r10, r10\n\tadd\t160, r14, r14\n\tld.1\tr14, r14\n\tand\t@CPI0_16[0], r14, r14\n\tor\tr10, r14, r10\n\tst.1\tr15, r10\n\tand\t255, r12, r12\n\tsub.s!\t255, r12, r10\n\tjump.ne\t@.BB0_124\n\tjump\t@.BB0_84\n.BB0_125:\n\tld.1\tr3, r14\n\tsub!\tr14, r11, r14\n\tjump.le\t@.BB0_154\n\tadd\tr11, r4, r14\n\tld.1\tr14, r15\n\tand\t@CPI0_13[0], r15, r15\n\tor\tr15, r13, r13\n\tst.1\tr14, r13\n\tand\t255, r12, r12\n\tsub.s!\t255, r12, r13\n\tjump.eq\t@.BB0_84\n\tadd\t1, r12, r12\n\tadd\t1, r0, r13\n\tjump\t@.BB0_102\n.BB0_128:\n\tand\t255, r11, r5\n\tadd\t31, r5, r2\n\tand\t480, r2, r7\n\tadd\t63, r7, r2\n\tand\t992, r2, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_10[0], r6, r9\n\tjump.gt\t@.BB0_153\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_153\n\tst.1\t64, r6\n\tst.1.inc\tr2, r5, r6\n\tand\t31, r7, r8\n\tshr.s!\t5, r7, r9\n\tjump.eq\t@.BB0_133\n\tadd\tr6, r7, r7\n\tadd\tr6, r0, r9\n.BB0_132:\n\tld.inc\tr1, r10, r1\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_132\n.BB0_133:\n\tsub!\tr8, r0, r1\n\tjump.eq\t@.BB0_135\n.BB0_135:\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_152\n\tadd\tr0, r0, r1\n.BB0_137:\n\tld.1\tr3, r7\n\tsub!\tr7, r1, r7\n\tjump.le\t@.BB0_154\n\tld.1\tr2, r7\n\tsub!\tr7, r1, r7\n\tjump.le\t@.BB0_154\n\tadd\tr1, r4, r7\n\tld.1\tr7, r7\n\tand\t@CPI0_16[0], r7, r7\n\tadd\tr1, r6, r8\n\tld.1\tr8, r9\n\tand\t@CPI0_13[0], r9, r9\n\tor\tr9, r7, r7\n\tst.1\tr8, r7\n\tadd\t1, r1, r1\n\tand\t255, r1, r1\n\tsub!\tr1, r5, r7\n\tjump.lt\t@.BB0_137\n\tjump\t@.BB0_152\n.BB0_140:\n\tand\t255, r12, r5\n\tadd\t31, r5, r2\n\tand\t480, r2, r7\n\tadd\t63, r7, r2\n\tand\t992, r2, r6\n\tld.1\t64, r2\n\tadd\tr2, r6, r6\n\tsub!\tr6, r2, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_10[0], r6, r9\n\tjump.gt\t@.BB0_153\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_153\n\tst.1\t64, r6\n\tst.1.inc\tr2, r5, r6\n\tand\t31, r7, r8\n\tshr.s!\t5, r7, r9\n\tjump.eq\t@.BB0_145\n\tadd\tr6, r7, r7\n\tadd\tr6, r0, r9\n.BB0_144:\n\tld.inc\tr1, r10, r1\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_144\n.BB0_145:\n\tsub!\tr8, r0, r1\n\tjump.eq\t@.BB0_147\n.BB0_147:\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_152\n\tadd\tr0, r0, r1\n.BB0_149:\n\tld.1\tr3, r7\n\tsub!\tr7, r1, r7\n\tjump.le\t@.BB0_154\n\tld.1\tr2, r7\n\tsub!\tr7, r1, r7\n\tjump.le\t@.BB0_154\n\tadd\tr1, r4, r7\n\tld.1\tr7, r7\n\tand\t@CPI0_16[0], r7, r7\n\tadd\tr1, r6, r8\n\tld.1\tr8, r9\n\tand\t@CPI0_13[0], r9, r9\n\tor\tr9, r7, r7\n\tst.1\tr8, r7\n\tadd\t1, r1, r1\n\tand\t255, r1, r1\n\tsub!\tr1, r5, r7\n\tjump.lt\t@.BB0_149\n.BB0_152:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r3\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_153:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_154:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1.inc\tr2, r2, r4\n\tst.1\tr3, r2\n\tand\t@CPI1_0[0], r2, r6\n\tand\t31, r2, r5\n\tadd\t64, r1, r1\n\tsub!\tr4, r1, r7\n\tjump.ge\t@.BB1_6\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB1_2\n\tadd\tr4, r5, r8\n\tadd\tr1, r5, r7\n\tsub.s\t32, r7, r7\n\tsub.s\t32, r8, r8\n.BB1_5:\n\tadd\tr7, r6, r9\n\tadd\tr8, r6, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tsub.s!\t32, r6, r6\n\tjump.ne\t@.BB1_5\n.BB1_2:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB1_12\n\tadd\tr1, r0, r7\n\tjump\t@.BB1_11\n.BB1_6:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB1_7\n\tsub.s\t32, r6, r7\n\tand\t@CPI1_0[0], r7, r7\n\tadd\tr7, r1, r7\n\tadd\t32, r7, r7\n\tadd\tr4, r0, r8\n\tadd\tr1, r0, r9\n.BB1_9:\n\tld.1.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB1_9\n.BB1_7:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_12\n\tadd\tr1, r6, r7\n\tadd\tr4, r6, r4\n.BB1_11:\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld.1\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr7, r4\n.BB1_12:\n\tadd\tr1, r2, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\t@CPI1_0[0], r2, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell\t4095535067\nCPI0_3:\n\t.cell\t1863871097\nCPI0_4:\n\t.cell\t10000000000000000000000000000000000000000000000000000000000000000\nCPI0_5:\n\t.cell\t100000000000000000000000000000000\nCPI0_6:\n\t.cell\t99999999999999999999999999999999\nCPI0_7:\n\t.cell\t10000000000000000\nCPI0_8:\n\t.cell\t340282366920938463463374607431768211455\nCPI0_9:\n\t.cell\t100000000\nCPI0_10:\n\t.cell\t18446744073709551615\nCPI0_11:\n\t.cell\t21797938705943676250364219608352299876616432895080889470814659460585888940032\nCPI0_12:\n\t.cell\t57443731770074831323412168344153766786583156455220123566449660816425654157312\nCPI0_13:\n\t.cell\t452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_14:\n\t.cell\t18446744073709551613\nCPI0_15:\n\t.cell\t21711016731996786641919559689128982722488122124807605757398297001483711807488\nCPI0_16:\n\t.cell\t-452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI0_17:\n\t.cell\t20806391034830253865172911368748608442384450369607288850840034626421890482176\nCPI0_18:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_19:\n\t.cell\t2852213850513516153367582212096\nCPI0_20:\nCPI1_0:\n\t.cell\t-32\nCPI0_21:\n\t.cell\t-3\nCPI0_22:\n\t.cell\t-1\n","methodIdentifiers":{"uintToDecimalString(uint256)":"6f186a79","uintToDecimalString(uint256,uint256)":"f41ce7db"},"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.905b735b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uintToDecimalString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"}],\"name\":\"uintToDecimalString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uintToDecimalString(uint256)\":{\"params\":{\"value\":\"uint256 value to convert\"},\"returns\":{\"_0\":\"string representation of value with decimal places\"}},\"uintToDecimalString(uint256,uint256)\":{\"params\":{\"decimal\":\"number of decimal places\",\"value\":\"uint256 value to convert\"},\"returns\":{\"_0\":\"string representation of value with decimal places\"}}},\"title\":\"DecimalUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uintToDecimalString(uint256)\":{\"notice\":\"Convert uint256 to human readable string with decimal places\"},\"uintToDecimalString(uint256,uint256)\":{\"notice\":\"Convert uint256 to human readable string with decimal places\"}},\"notice\":\"DecimalUtils library for converting uint256 to string with decimal places\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol\":\"DecimalUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol:DecimalUtils\":\"0x91cc0f0a227b8dd56794f9391e8af48b40420a0b\",\"node_modules/ether-email-auth/packages/contracts/src/libraries/SubjectUtils.sol:SubjectUtils\":\"0x981e3df952358a57753c7b85de7949da4abcf54a\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@matterlabs/=node_modules/@matterlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@uniswap/=node_modules/@uniswap/\",\":@zk-email/=node_modules/@zk-email/\",\":accountabstraction/=node_modules/accountabstraction/\",\":ds-test/=node_modules/ds-test/src/\",\":email-recovery/=node_modules/email-recovery/\",\":ether-email-auth/=node_modules/ether-email-auth/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol\":{\"keccak256\":\"0x80b98721a7070856b3f000e61a54317ff441564ba5967c8a255c04a450747201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830b971ed21fd3ac7c944afda51db3401658f9788d6e8eb2e49d849edf0c3467\",\"dweb:/ipfs/QmQn1xgS48uTT4k8xCLeQ2oRm9CSDdkAkg11Q2FV6KppMU\"]}},\"version\":1}","solc_version":"0.8.26","solc_zkvm_edition":"1.0.1","zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 38:\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol\"\nobject \"DecimalUtils_8539\" {\n    code {\n        {\n            /// @src 38:220:3708  \"library DecimalUtils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"DecimalUtils_8539_deployed\")\n            codecopy(_1, dataoffset(\"DecimalUtils_8539_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 22:\"node_modules/@openzeppelin/contracts/utils/Strings.sol\", 24:\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\", 38:\"node_modules/ether-email-auth/packages/contracts/src/libraries/DecimalUtils.sol\"\n    object \"DecimalUtils_8539_deployed\" {\n        code {\n            {\n                /// @src 38:220:3708  \"library DecimalUtils {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x6f186a79 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 38:534:564  \"uintToDecimalString(value, 18)\"\n                        let var_mpos := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1014:1037  \"Strings.toString(value)\"\n                        let var_value := value\n                        let var_mpos_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 22:759:776  \"Math.log10(value)\"\n                        let var_value_1 := value\n                        /// @src 24:12286:12304  \"uint256 result = 0\"\n                        let var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 24:12338:12441  \"if (value >= 10 ** 64) {...\"\n                        if /** @src 24:12342:12359  \"value >= 10 ** 64\" */ iszero(lt(value, /** @src 24:12351:12359  \"10 ** 64\" */ 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000))\n                        /// @src 24:12338:12441  \"if (value >= 10 ** 64) {...\"\n                        {\n                            /// @src 24:12379:12396  \"value /= 10 ** 64\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(value, /** @src 24:12351:12359  \"10 ** 64\" */ 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000)\n                            /// @src 24:12414:12426  \"result += 64\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 64\n                        }\n                        /// @src 24:12454:12557  \"if (value >= 10 ** 32) {...\"\n                        if /** @src 24:12458:12475  \"value >= 10 ** 32\" */ iszero(lt(var_value_1, /** @src 24:12467:12475  \"10 ** 32\" */ 0x04ee2d6d415b85acef8100000000))\n                        /// @src 24:12454:12557  \"if (value >= 10 ** 32) {...\"\n                        {\n                            /// @src 24:12495:12512  \"value /= 10 ** 32\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_1, /** @src 24:12467:12475  \"10 ** 32\" */ 0x04ee2d6d415b85acef8100000000)\n                            /// @src 24:12530:12542  \"result += 32\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12530:12542  \"result += 32\" */ var_result, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 32)\n                        }\n                        /// @src 24:12570:12673  \"if (value >= 10 ** 16) {...\"\n                        if /** @src 24:12574:12591  \"value >= 10 ** 16\" */ iszero(lt(var_value_1, /** @src 24:12583:12591  \"10 ** 16\" */ 0x2386f26fc10000))\n                        /// @src 24:12570:12673  \"if (value >= 10 ** 16) {...\"\n                        {\n                            /// @src 24:12611:12628  \"value /= 10 ** 16\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_1, /** @src 24:12583:12591  \"10 ** 16\" */ 0x2386f26fc10000)\n                            /// @src 24:12646:12658  \"result += 16\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12646:12658  \"result += 16\" */ var_result, /** @src 24:12656:12658  \"16\" */ 0x10)\n                        }\n                        /// @src 24:12686:12786  \"if (value >= 10 ** 8) {...\"\n                        if /** @src 24:12690:12706  \"value >= 10 ** 8\" */ iszero(lt(var_value_1, /** @src 24:12699:12706  \"10 ** 8\" */ 0x05f5e100))\n                        /// @src 24:12686:12786  \"if (value >= 10 ** 8) {...\"\n                        {\n                            /// @src 24:12726:12742  \"value /= 10 ** 8\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_1, /** @src 24:12699:12706  \"10 ** 8\" */ 0x05f5e100)\n                            /// @src 24:12760:12771  \"result += 8\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12760:12771  \"result += 8\" */ var_result, /** @src 24:12770:12771  \"8\" */ 0x08)\n                        }\n                        /// @src 24:12799:12899  \"if (value >= 10 ** 4) {...\"\n                        if /** @src 24:12803:12819  \"value >= 10 ** 4\" */ iszero(lt(var_value_1, /** @src 24:12812:12819  \"10 ** 4\" */ 0x2710))\n                        /// @src 24:12799:12899  \"if (value >= 10 ** 4) {...\"\n                        {\n                            /// @src 24:12839:12855  \"value /= 10 ** 4\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_1, /** @src 24:12812:12819  \"10 ** 4\" */ 0x2710)\n                            /// @src 24:12873:12884  \"result += 4\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12873:12884  \"result += 4\" */ var_result, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 4)\n                        }\n                        /// @src 24:12912:13012  \"if (value >= 10 ** 2) {...\"\n                        if /** @src 24:12916:12932  \"value >= 10 ** 2\" */ iszero(lt(var_value_1, /** @src 24:12925:12932  \"10 ** 2\" */ 0x64))\n                        /// @src 24:12912:13012  \"if (value >= 10 ** 2) {...\"\n                        {\n                            /// @src 24:12952:12968  \"value /= 10 ** 2\"\n                            var_value_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_1, /** @src 24:12925:12932  \"10 ** 2\" */ 0x64)\n                            /// @src 24:12986:12997  \"result += 2\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12986:12997  \"result += 2\" */ var_result, /** @src 24:12996:12997  \"2\" */ 0x02)\n                        }\n                        /// @src 24:13025:13091  \"if (value >= 10 ** 1) {...\"\n                        if /** @src 24:13029:13045  \"value >= 10 ** 1\" */ iszero(lt(var_value_1, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a))\n                        /// @src 24:13025:13091  \"if (value >= 10 ** 1) {...\"\n                        {\n                            /// @src 24:13065:13076  \"result += 1\"\n                            var_result := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:13065:13076  \"result += 1\" */ var_result, /** @src 24:13075:13076  \"1\" */ 0x01)\n                        }\n                        /// @src 22:759:780  \"Math.log10(value) + 1\"\n                        let expr := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 22:759:780  \"Math.log10(value) + 1\" */ var_result, /** @src 22:779:780  \"1\" */ 0x01)\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let memPtr := allocate_memory(array_allocation_size_bytes(expr))\n                        mstore(memPtr, expr)\n                        calldatacopy(add(memPtr, 32), calldatasize(), add(array_allocation_size_bytes(expr), not(31)))\n                        /// @src 22:849:860  \"uint256 ptr\"\n                        let var_ptr := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 22:921:997  \"assembly {...\"\n                        var_ptr := add(add(memPtr, /** @src 22:759:780  \"Math.log10(value) + 1\" */ var_result), /** @src 22:921:997  \"assembly {...\" */ 33)\n                        /// @src 22:1010:1292  \"while (true) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 22:1010:1292  \"while (true) {...\"\n                        { }\n                        {\n                            /// @src 22:1041:1046  \"ptr--\"\n                            var_ptr := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 22:1041:1046  \"ptr--\" */ var_ptr, /** @src 38:220:3708  \"library DecimalUtils {...\" */ not(0))\n                            /// @src 22:1115:1210  \"assembly {...\"\n                            mstore8(var_ptr, byte(mod(var_value, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a), /** @src 22:1115:1210  \"assembly {...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                            /// @src 22:1227:1238  \"value /= 10\"\n                            var_value := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a)\n                            /// @src 22:1256:1277  \"if (value == 0) break\"\n                            if /** @src 22:1260:1270  \"value == 0\" */ iszero(var_value)\n                            /// @src 22:1256:1277  \"if (value == 0) break\"\n                            {\n                                /// @src 22:1272:1277  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let cleaned := and(mload(/** @src 38:1074:1091  \"valueBytes.length\" */ memPtr), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1270:1291  \"valueLength > decimal\"\n                        let expr_1 := gt(/** @src 38:220:3708  \"library DecimalUtils {...\" */ cleaned, /** @src 38:561:563  \"18\" */ 0x12)\n                        /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                        let expr_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                        switch expr_1\n                        case 0 {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            var_mpos_1 := 0\n                            /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                            expr_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 20\n                        }\n                        default /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                        {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let sum := add(cleaned, /** @src 22:779:780  \"1\" */ 0x01)\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            if gt(sum, 0xff)\n                            {\n                                mstore(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0x24)\n                            }\n                            /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                            expr_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(sum, 0xff)\n                        }\n                        /// @src 38:1260:1324  \"new bytes(valueLength > decimal ? valueLength + 1 : decimal + 2)\"\n                        let expr_mpos := allocate_and_zero_memory_array_bytes(expr_2)\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let cleaned_1 := and(mload(/** @src 38:1361:1374  \"result.length\" */ expr_mpos), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1657:1711  \"valueLength > decimal ? 1 : resultLength - valueLength\"\n                        let expr_3 := var_mpos_1\n                        switch expr_1\n                        case 0 {\n                            expr_3 := /** @src 38:1685:1711  \"resultLength - valueLength\" */ checked_sub_uint8(cleaned_1, cleaned)\n                        }\n                        default /// @src 38:1657:1711  \"valueLength > decimal ? 1 : resultLength - valueLength\"\n                        {\n                            expr_3 := /** @src 22:779:780  \"1\" */ 0x01\n                        }\n                        /// @src 38:1644:1711  \"uint delta = valueLength > decimal ? 1 : resultLength - valueLength\"\n                        let var_delta := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:1644:1711  \"uint delta = valueLength > decimal ? 1 : resultLength - valueLength\" */ expr_3, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1821:1845  \"bool foundNonZeroDecimal\"\n                        let var_foundNonZeroDecimal := var_mpos_1\n                        var_foundNonZeroDecimal := var_mpos_1\n                        /// @src 38:1856:1881  \"uint8 actualResultLen = 0\"\n                        let var_actualResultLen := var_mpos_1\n                        /// @src 38:1980:2006  \"uint8 i = resultLength - 1\"\n                        let var_i := /** @src 38:1990:2006  \"resultLength - 1\" */ checked_sub_uint8_2126(cleaned_1)\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let diff := add(cleaned_1, not(17))\n                        let _1 := gt(diff, cleaned_1)\n                        let diff_1 := add(cleaned_1, not(18))\n                        let _2 := gt(diff_1, diff)\n                        /// @src 38:1975:3432  \"for (uint8 i = resultLength - 1; i >= 0; i--) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 38:1980:2006  \"uint8 i = resultLength - 1\"\n                        {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let value_1 := and(var_i, 0xff)\n                            if iszero(value_1)\n                            {\n                                mstore(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0x24)\n                            }\n                            /// @src 38:2016:2019  \"i--\"\n                            var_i := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(value_1, not(0))\n                        }\n                        /// @src 38:2016:2019  \"i--\"\n                        {\n                            /// @src 38:2008:2014  \"i >= 0\"\n                            let _3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:2008:2014  \"i >= 0\" */ var_i, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                            /// @src 38:2129:2151  \"resultLength - decimal\"\n                            let diff_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                            diff_2 := diff\n                            if _1\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            if _2\n                            {\n                                mstore(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0x24)\n                            }\n                            /// @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\"\n                            switch /** @src 38:2124:2155  \"i == resultLength - decimal - 1\" */ eq(_3, diff_1)\n                            case /** @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\" */ 0 {\n                                /// @src 38:2615:2671  \"valueLength <= decimal && i < resultLength - valueLength\"\n                                let expr_4 := /** @src 38:2615:2637  \"valueLength <= decimal\" */ iszero(expr_1)\n                                /// @src 38:2615:2671  \"valueLength <= decimal && i < resultLength - valueLength\"\n                                if expr_4\n                                {\n                                    expr_4 := /** @src 38:2641:2671  \"i < resultLength - valueLength\" */ lt(_3, /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:2645:2671  \"resultLength - valueLength\" */ checked_sub_uint8(cleaned_1, cleaned), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff))\n                                }\n                                /// @src 38:2611:3309  \"if (valueLength <= decimal && i < resultLength - valueLength) {...\"\n                                switch expr_4\n                                case 0 {\n                                    /// @src 38:2885:2918  \"foundNonZeroDecimal || delta == 0\"\n                                    let expr_5 := var_foundNonZeroDecimal\n                                    if iszero(var_foundNonZeroDecimal)\n                                    {\n                                        expr_5 := /** @src 38:2908:2918  \"delta == 0\" */ iszero(var_delta)\n                                    }\n                                    /// @src 38:2881:3309  \"if (foundNonZeroDecimal || delta == 0) {...\"\n                                    switch expr_5\n                                    case 0 {\n                                        /// @src 38:3130:3309  \"if (valueBytes[i - delta] != \\\"0\\\") {...\"\n                                        if /** @src 38:3134:3162  \"valueBytes[i - delta] != \\\"0\\\"\" */ iszero(eq(/** @src 38:220:3708  \"library DecimalUtils {...\" */ and(mload(/** @src 38:3134:3155  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr, /** @src 38:3145:3154  \"i - delta\" */ checked_sub_uint256(_3, var_delta))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255)), shl(252, 3)))\n                                        /// @src 38:3130:3309  \"if (valueBytes[i - delta] != \\\"0\\\") {...\"\n                                        {\n                                            /// @src 38:3182:3215  \"result[i] = valueBytes[i - delta]\"\n                                            mstore8(memory_array_index_access_bytes(expr_mpos, _3), byte(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(mload(/** @src 38:3194:3215  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr, /** @src 38:3205:3214  \"i - delta\" */ checked_sub_uint256(_3, var_delta))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                                            /// @src 38:3233:3250  \"actualResultLen++\"\n                                            var_actualResultLen := increment_uint8(var_actualResultLen)\n                                            /// @src 38:3268:3294  \"foundNonZeroDecimal = true\"\n                                            var_foundNonZeroDecimal := /** @src 22:779:780  \"1\" */ 0x01\n                                        }\n                                    }\n                                    default /// @src 38:2881:3309  \"if (foundNonZeroDecimal || delta == 0) {...\"\n                                    {\n                                        /// @src 38:2938:2971  \"result[i] = valueBytes[i - delta]\"\n                                        mstore8(memory_array_index_access_bytes(expr_mpos, _3), byte(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(mload(/** @src 38:2950:2971  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr, /** @src 38:2961:2970  \"i - delta\" */ checked_sub_uint256(_3, var_delta))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                                        /// @src 38:2989:3006  \"actualResultLen++\"\n                                        var_actualResultLen := increment_uint8(var_actualResultLen)\n                                    }\n                                }\n                                default /// @src 38:2611:3309  \"if (valueLength <= decimal && i < resultLength - valueLength) {...\"\n                                {\n                                    /// @src 38:2691:2706  \"result[i] = \\\"0\\\"\"\n                                    mstore8(memory_array_index_access_bytes(expr_mpos, _3), 48)\n                                    /// @src 38:2724:2741  \"actualResultLen++\"\n                                    var_actualResultLen := increment_uint8(var_actualResultLen)\n                                }\n                            }\n                            default /// @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\"\n                            {\n                                /// @src 38:2253:2373  \"if (foundNonZeroDecimal) {...\"\n                                if var_foundNonZeroDecimal\n                                {\n                                    /// @src 38:2300:2315  \"result[i] = \\\".\\\"\"\n                                    mstore8(memory_array_index_access_bytes(expr_mpos, _3), 46)\n                                    /// @src 38:2337:2354  \"actualResultLen++\"\n                                    var_actualResultLen := increment_uint8(var_actualResultLen)\n                                }\n                                /// @src 38:2492:2501  \"delta = 0\"\n                                var_delta := var_mpos_1\n                            }\n                            /// @src 38:3372:3422  \"if (i == 0) {...\"\n                            if /** @src 38:3376:3382  \"i == 0\" */ iszero(_3)\n                            /// @src 38:3372:3422  \"if (i == 0) {...\"\n                            {\n                                /// @src 38:3402:3407  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let _4 := and(/** @src 38:3528:3554  \"new bytes(actualResultLen)\" */ var_actualResultLen, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:3528:3554  \"new bytes(actualResultLen)\"\n                        let expr_mpos_1 := allocate_and_zero_memory_array_bytes(/** @src 38:220:3708  \"library DecimalUtils {...\" */ _4)\n                        /// @src 38:3569:3580  \"uint8 i = 0\"\n                        let var_i_1 := var_mpos_1\n                        /// @src 38:3564:3661  \"for (uint8 i = 0; i < actualResultLen; i++) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 38:3569:3580  \"uint8 i = 0\"\n                        {\n                            /// @src 38:3603:3606  \"i++\"\n                            var_i_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(add(/** @src 38:3603:3606  \"i++\" */ var_i_1, /** @src 22:779:780  \"1\" */ 0x01), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        }\n                        /// @src 38:3603:3606  \"i++\"\n                        {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let _5 := and(/** @src 38:3582:3601  \"i < actualResultLen\" */ var_i_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                            /// @src 38:3582:3601  \"i < actualResultLen\"\n                            if iszero(lt(/** @src 38:220:3708  \"library DecimalUtils {...\" */ _5, _4))\n                            /// @src 38:3582:3601  \"i < actualResultLen\"\n                            { break }\n                            /// @src 38:3622:3650  \"compactResult[i] = result[i]\"\n                            mstore8(memory_array_index_access_bytes(expr_mpos_1, _5), byte(/** @src -1:-1:-1 */ var_mpos_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(mload(/** @src 38:3641:3650  \"result[i]\" */ memory_array_index_access_bytes(expr_mpos, _5)), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                        }\n                        /// @src 38:3671:3699  \"return string(compactResult)\"\n                        var_mpos := expr_mpos_1\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, expr_mpos_1), memPos))\n                    }\n                    case 0xf41ce7db {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        let value_3 := calldataload(36)\n                        let var_mpos_2 := 0\n                        /// @src 38:1014:1037  \"Strings.toString(value)\"\n                        let var_value_2 := value_2\n                        /// @src 22:759:776  \"Math.log10(value)\"\n                        let var_value_3 := value_2\n                        /// @src 24:12286:12304  \"uint256 result = 0\"\n                        let var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 24:12338:12441  \"if (value >= 10 ** 64) {...\"\n                        if /** @src 24:12342:12359  \"value >= 10 ** 64\" */ iszero(lt(value_2, /** @src 24:12351:12359  \"10 ** 64\" */ 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000))\n                        /// @src 24:12338:12441  \"if (value >= 10 ** 64) {...\"\n                        {\n                            /// @src 24:12379:12396  \"value /= 10 ** 64\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(value_2, /** @src 24:12351:12359  \"10 ** 64\" */ 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000)\n                            /// @src 24:12414:12426  \"result += 64\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 64\n                        }\n                        /// @src 24:12454:12557  \"if (value >= 10 ** 32) {...\"\n                        if /** @src 24:12458:12475  \"value >= 10 ** 32\" */ iszero(lt(var_value_3, /** @src 24:12467:12475  \"10 ** 32\" */ 0x04ee2d6d415b85acef8100000000))\n                        /// @src 24:12454:12557  \"if (value >= 10 ** 32) {...\"\n                        {\n                            /// @src 24:12495:12512  \"value /= 10 ** 32\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_3, /** @src 24:12467:12475  \"10 ** 32\" */ 0x04ee2d6d415b85acef8100000000)\n                            /// @src 24:12530:12542  \"result += 32\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12530:12542  \"result += 32\" */ var_result_1, /** @src 24:12540:12542  \"32\" */ 0x20)\n                        }\n                        /// @src 24:12570:12673  \"if (value >= 10 ** 16) {...\"\n                        if /** @src 24:12574:12591  \"value >= 10 ** 16\" */ iszero(lt(var_value_3, /** @src 24:12583:12591  \"10 ** 16\" */ 0x2386f26fc10000))\n                        /// @src 24:12570:12673  \"if (value >= 10 ** 16) {...\"\n                        {\n                            /// @src 24:12611:12628  \"value /= 10 ** 16\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_3, /** @src 24:12583:12591  \"10 ** 16\" */ 0x2386f26fc10000)\n                            /// @src 24:12646:12658  \"result += 16\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12646:12658  \"result += 16\" */ var_result_1, /** @src 24:12656:12658  \"16\" */ 0x10)\n                        }\n                        /// @src 24:12686:12786  \"if (value >= 10 ** 8) {...\"\n                        if /** @src 24:12690:12706  \"value >= 10 ** 8\" */ iszero(lt(var_value_3, /** @src 24:12699:12706  \"10 ** 8\" */ 0x05f5e100))\n                        /// @src 24:12686:12786  \"if (value >= 10 ** 8) {...\"\n                        {\n                            /// @src 24:12726:12742  \"value /= 10 ** 8\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_3, /** @src 24:12699:12706  \"10 ** 8\" */ 0x05f5e100)\n                            /// @src 24:12760:12771  \"result += 8\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12760:12771  \"result += 8\" */ var_result_1, /** @src 24:12770:12771  \"8\" */ 0x08)\n                        }\n                        /// @src 24:12799:12899  \"if (value >= 10 ** 4) {...\"\n                        if /** @src 24:12803:12819  \"value >= 10 ** 4\" */ iszero(lt(var_value_3, /** @src 24:12812:12819  \"10 ** 4\" */ 0x2710))\n                        /// @src 24:12799:12899  \"if (value >= 10 ** 4) {...\"\n                        {\n                            /// @src 24:12839:12855  \"value /= 10 ** 4\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_3, /** @src 24:12812:12819  \"10 ** 4\" */ 0x2710)\n                            /// @src 24:12873:12884  \"result += 4\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12873:12884  \"result += 4\" */ var_result_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 4)\n                        }\n                        /// @src 24:12912:13012  \"if (value >= 10 ** 2) {...\"\n                        if /** @src 24:12916:12932  \"value >= 10 ** 2\" */ iszero(lt(var_value_3, /** @src 24:12925:12932  \"10 ** 2\" */ 0x64))\n                        /// @src 24:12912:13012  \"if (value >= 10 ** 2) {...\"\n                        {\n                            /// @src 24:12952:12968  \"value /= 10 ** 2\"\n                            var_value_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_3, /** @src 24:12925:12932  \"10 ** 2\" */ 0x64)\n                            /// @src 24:12986:12997  \"result += 2\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:12986:12997  \"result += 2\" */ var_result_1, /** @src 24:12996:12997  \"2\" */ 0x02)\n                        }\n                        /// @src 24:13025:13091  \"if (value >= 10 ** 1) {...\"\n                        if /** @src 24:13029:13045  \"value >= 10 ** 1\" */ iszero(lt(var_value_3, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a))\n                        /// @src 24:13025:13091  \"if (value >= 10 ** 1) {...\"\n                        {\n                            /// @src 24:13065:13076  \"result += 1\"\n                            var_result_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 24:13065:13076  \"result += 1\" */ var_result_1, /** @src 24:13075:13076  \"1\" */ 0x01)\n                        }\n                        /// @src 22:759:780  \"Math.log10(value) + 1\"\n                        let expr_6 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 22:759:780  \"Math.log10(value) + 1\" */ var_result_1, /** @src 22:779:780  \"1\" */ 0x01)\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let memPtr_1 := allocate_memory(array_allocation_size_bytes(expr_6))\n                        mstore(memPtr_1, expr_6)\n                        calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_bytes(expr_6), not(31)))\n                        /// @src 22:849:860  \"uint256 ptr\"\n                        let var_ptr_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 22:921:997  \"assembly {...\"\n                        var_ptr_1 := add(add(memPtr_1, /** @src 22:759:780  \"Math.log10(value) + 1\" */ var_result_1), /** @src 22:921:997  \"assembly {...\" */ 33)\n                        /// @src 22:1010:1292  \"while (true) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 22:1010:1292  \"while (true) {...\"\n                        { }\n                        {\n                            /// @src 22:1041:1046  \"ptr--\"\n                            var_ptr_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(/** @src 22:1041:1046  \"ptr--\" */ var_ptr_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ not(0))\n                            /// @src 22:1115:1210  \"assembly {...\"\n                            mstore8(var_ptr_1, byte(mod(var_value_2, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a), /** @src 22:1115:1210  \"assembly {...\" */ shl(129, 0x181899199a1a9b1b9c1cb0b131b232b3)))\n                            /// @src 22:1227:1238  \"value /= 10\"\n                            var_value_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ div(var_value_2, /** @src 24:13038:13045  \"10 ** 1\" */ 0x0a)\n                            /// @src 22:1256:1277  \"if (value == 0) break\"\n                            if /** @src 22:1260:1270  \"value == 0\" */ iszero(var_value_2)\n                            /// @src 22:1256:1277  \"if (value == 0) break\"\n                            {\n                                /// @src 22:1272:1277  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let cleaned_2 := and(mload(/** @src 38:1074:1091  \"valueBytes.length\" */ memPtr_1), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1270:1291  \"valueLength > decimal\"\n                        let expr_7 := gt(/** @src 38:220:3708  \"library DecimalUtils {...\" */ cleaned_2, /** @src 38:1270:1291  \"valueLength > decimal\" */ value_3)\n                        /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                        let expr_8 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                        switch expr_7\n                        case 0 {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let sum_1 := add(value_3, /** @src 38:1322:1323  \"2\" */ 0x02)\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            if gt(value_3, sum_1)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                            expr_8 := sum_1\n                        }\n                        default {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let sum_2 := add(cleaned_2, /** @src 22:779:780  \"1\" */ 0x01)\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            if gt(sum_2, 0xff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 38:1270:1323  \"valueLength > decimal ? valueLength + 1 : decimal + 2\"\n                            expr_8 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(sum_2, 0xff)\n                        }\n                        /// @src 38:1260:1324  \"new bytes(valueLength > decimal ? valueLength + 1 : decimal + 2)\"\n                        let expr_mpos_2 := allocate_and_zero_memory_array_bytes(expr_8)\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let cleaned_3 := and(mload(/** @src 38:1361:1374  \"result.length\" */ expr_mpos_2), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1657:1711  \"valueLength > decimal ? 1 : resultLength - valueLength\"\n                        let expr_9 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1657:1711  \"valueLength > decimal ? 1 : resultLength - valueLength\"\n                        switch expr_7\n                        case 0 {\n                            expr_9 := /** @src 38:1685:1711  \"resultLength - valueLength\" */ checked_sub_uint8(cleaned_3, cleaned_2)\n                        }\n                        default /// @src 38:1657:1711  \"valueLength > decimal ? 1 : resultLength - valueLength\"\n                        {\n                            expr_9 := /** @src 22:779:780  \"1\" */ 0x01\n                        }\n                        /// @src 38:1644:1711  \"uint delta = valueLength > decimal ? 1 : resultLength - valueLength\"\n                        let var_delta_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:1644:1711  \"uint delta = valueLength > decimal ? 1 : resultLength - valueLength\" */ expr_9, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:1821:1845  \"bool foundNonZeroDecimal\"\n                        let var_foundNonZeroDecimal_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1821:1845  \"bool foundNonZeroDecimal\"\n                        var_foundNonZeroDecimal_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1856:1881  \"uint8 actualResultLen = 0\"\n                        let var_actualResultLen_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:1980:2006  \"uint8 i = resultLength - 1\"\n                        let var_i_2 := /** @src 38:1990:2006  \"resultLength - 1\" */ checked_sub_uint8_2126(cleaned_3)\n                        /// @src 38:1975:3432  \"for (uint8 i = resultLength - 1; i >= 0; i--) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 38:1980:2006  \"uint8 i = resultLength - 1\"\n                        {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let value_4 := and(var_i_2, 0xff)\n                            if iszero(value_4)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 38:2016:2019  \"i--\"\n                            var_i_2 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ add(value_4, not(0))\n                        }\n                        /// @src 38:2016:2019  \"i--\"\n                        {\n                            /// @src 38:2008:2014  \"i >= 0\"\n                            let _6 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:2008:2014  \"i >= 0\" */ var_i_2, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                            /// @src 38:2129:2151  \"resultLength - decimal\"\n                            let _7 := checked_sub_uint256(cleaned_3, value_3)\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let diff_3 := add(_7, not(0))\n                            if gt(diff_3, _7)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\"\n                            switch /** @src 38:2124:2155  \"i == resultLength - decimal - 1\" */ eq(_6, diff_3)\n                            case /** @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\" */ 0 {\n                                /// @src 38:2615:2671  \"valueLength <= decimal && i < resultLength - valueLength\"\n                                let expr_10 := /** @src 38:2615:2637  \"valueLength <= decimal\" */ iszero(expr_7)\n                                /// @src 38:2615:2671  \"valueLength <= decimal && i < resultLength - valueLength\"\n                                if expr_10\n                                {\n                                    expr_10 := /** @src 38:2641:2671  \"i < resultLength - valueLength\" */ lt(_6, /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(/** @src 38:2645:2671  \"resultLength - valueLength\" */ checked_sub_uint8(cleaned_3, cleaned_2), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff))\n                                }\n                                /// @src 38:2611:3309  \"if (valueLength <= decimal && i < resultLength - valueLength) {...\"\n                                switch expr_10\n                                case 0 {\n                                    /// @src 38:2885:2918  \"foundNonZeroDecimal || delta == 0\"\n                                    let expr_11 := var_foundNonZeroDecimal_1\n                                    if iszero(var_foundNonZeroDecimal_1)\n                                    {\n                                        expr_11 := /** @src 38:2908:2918  \"delta == 0\" */ iszero(var_delta_1)\n                                    }\n                                    /// @src 38:2881:3309  \"if (foundNonZeroDecimal || delta == 0) {...\"\n                                    switch expr_11\n                                    case 0 {\n                                        /// @src 38:3130:3309  \"if (valueBytes[i - delta] != \\\"0\\\") {...\"\n                                        if /** @src 38:3134:3162  \"valueBytes[i - delta] != \\\"0\\\"\" */ iszero(eq(/** @src 38:220:3708  \"library DecimalUtils {...\" */ and(mload(/** @src 38:3134:3155  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr_1, /** @src 38:3145:3154  \"i - delta\" */ checked_sub_uint256(_6, var_delta_1))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255)), shl(252, 3)))\n                                        /// @src 38:3130:3309  \"if (valueBytes[i - delta] != \\\"0\\\") {...\"\n                                        {\n                                            /// @src 38:3182:3215  \"result[i] = valueBytes[i - delta]\"\n                                            mstore8(memory_array_index_access_bytes(expr_mpos_2, _6), byte(/** @src 38:220:3708  \"library DecimalUtils {...\" */ 0, and(mload(/** @src 38:3194:3215  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr_1, /** @src 38:3205:3214  \"i - delta\" */ checked_sub_uint256(_6, var_delta_1))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                                            /// @src 38:3233:3250  \"actualResultLen++\"\n                                            var_actualResultLen_1 := increment_uint8(var_actualResultLen_1)\n                                            /// @src 38:3268:3294  \"foundNonZeroDecimal = true\"\n                                            var_foundNonZeroDecimal_1 := /** @src 22:779:780  \"1\" */ 0x01\n                                        }\n                                    }\n                                    default /// @src 38:2881:3309  \"if (foundNonZeroDecimal || delta == 0) {...\"\n                                    {\n                                        /// @src 38:2938:2971  \"result[i] = valueBytes[i - delta]\"\n                                        mstore8(memory_array_index_access_bytes(expr_mpos_2, _6), byte(/** @src 38:220:3708  \"library DecimalUtils {...\" */ 0, and(mload(/** @src 38:2950:2971  \"valueBytes[i - delta]\" */ memory_array_index_access_bytes(memPtr_1, /** @src 38:2961:2970  \"i - delta\" */ checked_sub_uint256(_6, var_delta_1))), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                                        /// @src 38:2989:3006  \"actualResultLen++\"\n                                        var_actualResultLen_1 := increment_uint8(var_actualResultLen_1)\n                                    }\n                                }\n                                default /// @src 38:2611:3309  \"if (valueLength <= decimal && i < resultLength - valueLength) {...\"\n                                {\n                                    /// @src 38:2691:2706  \"result[i] = \\\"0\\\"\"\n                                    mstore8(memory_array_index_access_bytes(expr_mpos_2, _6), 48)\n                                    /// @src 38:2724:2741  \"actualResultLen++\"\n                                    var_actualResultLen_1 := increment_uint8(var_actualResultLen_1)\n                                }\n                            }\n                            default /// @src 38:2120:3309  \"if (i == resultLength - decimal - 1) {...\"\n                            {\n                                /// @src 38:2253:2373  \"if (foundNonZeroDecimal) {...\"\n                                if var_foundNonZeroDecimal_1\n                                {\n                                    /// @src 38:2300:2315  \"result[i] = \\\".\\\"\"\n                                    mstore8(memory_array_index_access_bytes(expr_mpos_2, _6), 46)\n                                    /// @src 38:2337:2354  \"actualResultLen++\"\n                                    var_actualResultLen_1 := increment_uint8(var_actualResultLen_1)\n                                }\n                                /// @src 38:2492:2501  \"delta = 0\"\n                                var_delta_1 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                            }\n                            /// @src 38:3372:3422  \"if (i == 0) {...\"\n                            if /** @src 38:3376:3382  \"i == 0\" */ iszero(_6)\n                            /// @src 38:3372:3422  \"if (i == 0) {...\"\n                            {\n                                /// @src 38:3402:3407  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let _8 := and(/** @src 38:3528:3554  \"new bytes(actualResultLen)\" */ var_actualResultLen_1, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        /// @src 38:3528:3554  \"new bytes(actualResultLen)\"\n                        let expr_mpos_3 := allocate_and_zero_memory_array_bytes(/** @src 38:220:3708  \"library DecimalUtils {...\" */ _8)\n                        /// @src 38:3569:3580  \"uint8 i = 0\"\n                        let var_i_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0\n                        /// @src 38:3564:3661  \"for (uint8 i = 0; i < actualResultLen; i++) {...\"\n                        for { }\n                        /** @src 22:779:780  \"1\" */ 0x01\n                        /// @src 38:3569:3580  \"uint8 i = 0\"\n                        {\n                            /// @src 38:3603:3606  \"i++\"\n                            var_i_3 := /** @src 38:220:3708  \"library DecimalUtils {...\" */ and(add(/** @src 38:3603:3606  \"i++\" */ var_i_3, /** @src 22:779:780  \"1\" */ 0x01), /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                        }\n                        /// @src 38:3603:3606  \"i++\"\n                        {\n                            /// @src 38:220:3708  \"library DecimalUtils {...\"\n                            let _9 := and(/** @src 38:3582:3601  \"i < actualResultLen\" */ var_i_3, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0xff)\n                            /// @src 38:3582:3601  \"i < actualResultLen\"\n                            if iszero(lt(/** @src 38:220:3708  \"library DecimalUtils {...\" */ _9, _8))\n                            /// @src 38:3582:3601  \"i < actualResultLen\"\n                            { break }\n                            /// @src 38:3622:3650  \"compactResult[i] = result[i]\"\n                            mstore8(memory_array_index_access_bytes(expr_mpos_3, _9), byte(/** @src 38:220:3708  \"library DecimalUtils {...\" */ 0, and(mload(/** @src 38:3641:3650  \"result[i]\" */ memory_array_index_access_bytes(expr_mpos_2, _9)), /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(248, 255))))\n                        }\n                        /// @src 38:3671:3699  \"return string(compactResult)\"\n                        var_mpos_2 := expr_mpos_3\n                        /// @src 38:220:3708  \"library DecimalUtils {...\"\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_string(memPos_1, expr_mpos_3), memPos_1))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 38:220:3708  \"library DecimalUtils {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 38:220:3708  \"library DecimalUtils {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function allocate_and_zero_memory_array_bytes(length) -> memPtr\n            {\n                let memPtr_1 := allocate_memory(array_allocation_size_bytes(length))\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_bytes(length), not(31)))\n            }\n            function checked_sub_uint8_2126(x) -> diff\n            {\n                diff := add(and(x, 0xff), not(0))\n                if gt(diff, 0xff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_sub_uint8(x, y) -> diff\n            {\n                diff := sub(and(x, 0xff), and(y, 0xff))\n                if gt(diff, 0xff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function memory_array_index_access_bytes(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, index), 32)\n            }\n            function increment_uint8(value) -> ret\n            {\n                let value_1 := and(value, 0xff)\n                if eq(value_1, 0xff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value_1, 1)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c126b912d495b74d5920ed65140b1eb647f58a637adeac1d1f02855d3bc849b864736f6c634300081a0033\"\n    }\n}\n","hash":"010000bfa66a8829eb49be518cb685a364029a7adec5186c22b0e474b1d29292","factoryDependencies":{},"id":38}